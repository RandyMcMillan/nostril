commit 0000073f9f6f0d2dc6a112f2b503a3ae5f7e3159
Author: @RandyMcMillan <randy.lee.mcmillan@gmail.com>
Date:   Sun Jul 16 10:10:16 2023 -0400

    01:00047fde:write commit/blob

diff --git a/.gnostr/blobs/00000e71b4ebde34983b1f82af993c488087e4fd b/.gnostr/blobs/00000e71b4ebde34983b1f82af993c488087e4fd
new file mode 100644
index 00000000..c1b5e40
--- /dev/null
+++ b/.gnostr/blobs/00000e71b4ebde34983b1f82af993c488087e4fd
@@ -0,0 +1,198 @@
+commit 00000e71b4ebde34983b1f82af993c488087e4fd
+Author: @RandyMcMillan <randy.lee.mcmillan@gmail.com>
+Date:   Sun Jul 16 10:06:48 2023 -0400
+
+    03:0002be4b:
+
+diff --git a/.gnostr/blobs/0000008e6df519e8eeaea4e84929b857d9ea51fd b/.gnostr/blobs/0000008e6df519e8eeaea4e84929b857d9ea51fd
+new file mode 100644
+index 00000000..983ba80
+--- /dev/null
++++ b/.gnostr/blobs/0000008e6df519e8eeaea4e84929b857d9ea51fd
+@@ -0,0 +1,62 @@
++commit 0000008e6df519e8eeaea4e84929b857d9ea51fd
++Author: @RandyMcMillan <randy.lee.mcmillan@gmail.com>
++Date:   Sun Jul 16 10:04:14 2023 -0400
++
++    00:00017ae2:write commit/blob
++
++diff --git a/src/gitminer.rs b/src/gitminer.rs
++index 21752ac..d5f5f56 100644
++--- a/src/gitminer.rs
+++++ b/src/gitminer.rs
++@@ -79,7 +79,12 @@ impl Gitminer {
++             .expect("Failed to generate commit");
++ 
++         /* repo.blob() generates a blob, not a commit.
++-         * don't know if there's a way to do this with libgit2. */
+++         * we write the commit, then
+++         * we use the tmpfile to create .gnostr/blobs/<hash>
+++         * we 'git show' the mined tmpfile
+++         * and pipe it into the .gnostr/blobs/<hash>
+++         */
+++
++         let tmpfile  = format!("/tmp/{}.tmp",hash);
++         let mut file = File::create(&Path::new(&tmpfile))
++             .ok()
++@@ -89,6 +94,7 @@ impl Gitminer {
++             .ok()
++             .expect(&format!("Failed to write temporary file {}", &tmpfile));
++ 
+++        //write the commit
++         Command::new("sh")
++             .arg("-c")
++             .arg(format!("cd {} && git hash-object -t commit -w --stdin < {} && git reset --hard {}", self.opts.repo, tmpfile, hash))
++@@ -96,21 +102,20 @@ impl Gitminer {
++             .ok()
++             .expect("Failed to generate commit");
++ 
+++        //write the blob
++         Command::new("sh")
++             .arg("-c")
++             .arg(format!("cd {} && touch -f .gnostr/blobs/{} && git show {} > .gnostr/blobs/{}", self.opts.repo, hash, hash, hash))
++             .output()
++             .ok()
++             .expect("Failed to write .gnostr/blobs/<hash>");
++-
++-
++-///
++-//        Command::new("sh")
++-//            .arg("-c")
++-//            .arg(format!("cd {} && git branch {}", self.opts.repo, hash))
++-//            .output()
++-//            .ok()
++-//            .expect("Failed to generate commit");
+++        //add the blob
+++        Command::new("sh")
+++            .arg("-c")
+++            .arg(format!("cd {} && git add .gnostr/blobs/{}", self.opts.repo, hash))
+++            .output()
+++            .ok()
+++            .expect("Failed to git add .gnostr/blobs/<hash>");
++ 
++         Ok(())
++     }
+diff --git a/.gnostr/blobs/0000082d1609c0c2bbd8b894fc826fc78fd0b924 b/.gnostr/blobs/0000082d1609c0c2bbd8b894fc826fc78fd0b924
+new file mode 100644
+index 00000000..ffd747f
+--- /dev/null
++++ b/.gnostr/blobs/0000082d1609c0c2bbd8b894fc826fc78fd0b924
+@@ -0,0 +1,5 @@
++commit 0000082d1609c0c2bbd8b894fc826fc78fd0b924
++Author: @RandyMcMillan <randy.lee.mcmillan@gmail.com>
++Date:   Sun Jul 16 10:05:55 2023 -0400
++
++    03:0000392c:write commit/blob
+diff --git a/.gnostr/blobs/00000c7bba1862e00767cdec5e8cd84ee55f05d3 b/.gnostr/blobs/00000c7bba1862e00767cdec5e8cd84ee55f05d3
+new file mode 100644
+index 00000000..b426533
+--- /dev/null
++++ b/.gnostr/blobs/00000c7bba1862e00767cdec5e8cd84ee55f05d3
+@@ -0,0 +1,107 @@
++commit 00000c7bba1862e00767cdec5e8cd84ee55f05d3
++Author: @RandyMcMillan <randy.lee.mcmillan@gmail.com>
++Date:   Sun Jul 16 09:51:48 2023 -0400
++
++    02:0000c300:
++
++diff --git a/.gnostr/blobs/00000074d9f399f76a45b9eb89c03941630359aa b/.gnostr/blobs/00000074d9f399f76a45b9eb89c03941630359aa
++new file mode 100644
++index 00000000..a99f552
++--- /dev/null
+++++ b/.gnostr/blobs/00000074d9f399f76a45b9eb89c03941630359aa
++@@ -0,0 +1,34 @@
+++commit 00000074d9f399f76a45b9eb89c03941630359aa
+++Author: @RandyMcMillan <randy.lee.mcmillan@gmail.com>
+++Date:   Sun Jul 16 09:50:00 2023 -0400
+++
+++    01:000cf4e5:
+++
+++diff --git a/src/main.rs b/src/main.rs
+++index 4838731..fe319ac 100644
+++--- a/src/main.rs
++++++ b/src/main.rs
+++@@ -70,20 +70,20 @@ fn main() -> io::Result<()> {
+++         if cfg!(target_os = "macos"){
+++         Command::new("sh")
+++                 .arg("-c")
+++-                .arg("git diff")
++++                .arg("gnostr-git diff")
+++                 .output()
+++                 .expect("failed to execute process")
+++         } else
+++         if cfg!(target_os = "linux"){
+++         Command::new("sh")
+++                 .arg("-c")
+++-                .arg("git diff")
++++                .arg("gnostr-git diff")
+++                 .output()
+++                 .expect("failed to execute process")
+++         } else {
+++         Command::new("sh")
+++                 .arg("-c")
+++-                .arg("git diff")
++++                .arg("gnostr-git diff")
+++                 .output()
+++                 .expect("failed to execute process")
+++         };
++diff --git a/.gnostr/blobs/0000085d0d6bb7e9de0e3e87c28e27b439be4573 b/.gnostr/blobs/0000085d0d6bb7e9de0e3e87c28e27b439be4573
++new file mode 100644
++index 00000000..b2bb142
++--- /dev/null
+++++ b/.gnostr/blobs/0000085d0d6bb7e9de0e3e87c28e27b439be4573
++@@ -0,0 +1,55 @@
+++commit 0000085d0d6bb7e9de0e3e87c28e27b439be4573
+++Author: @RandyMcMillan <randy.lee.mcmillan@gmail.com>
+++Date:   Sun Jul 16 09:43:30 2023 -0400
+++
+++    03:0005164a:
+++
+++diff --git a/src/gitminer.rs b/src/gitminer.rs
+++index 18c4c71..21752ac 100644
+++--- a/src/gitminer.rs
++++++ b/src/gitminer.rs
+++@@ -70,9 +70,17 @@ impl Gitminer {
+++     }
+++ 
+++     fn write_commit(&self, hash: &String, blob: &String) -> Result<(), &'static str> {
++++
++++        Command::new("sh")
++++            .arg("-c")
++++            .arg(format!("mkdir -p {}.gnostr/{} && ", self.opts.repo, hash))
++++            .output()
++++            .ok()
++++            .expect("Failed to generate commit");
++++
+++         /* repo.blob() generates a blob, not a commit.
+++          * don't know if there's a way to do this with libgit2. */
+++-        let tmpfile  = format!("/tmp/{}.tmp", hash);
++++        let tmpfile  = format!("/tmp/{}.tmp",hash);
+++         let mut file = File::create(&Path::new(&tmpfile))
+++             .ok()
+++             .expect(&format!("Failed to create temporary file {}", &tmpfile));
+++@@ -87,13 +95,22 @@ impl Gitminer {
+++             .output()
+++             .ok()
+++             .expect("Failed to generate commit");
+++-//
++++
+++         Command::new("sh")
+++             .arg("-c")
+++-            .arg(format!("cd {} && git branch {}", self.opts.repo, hash))
++++            .arg(format!("cd {} && touch -f .gnostr/blobs/{} && git show {} > .gnostr/blobs/{}", self.opts.repo, hash, hash, hash))
+++             .output()
+++             .ok()
+++-            .expect("Failed to generate commit");
++++            .expect("Failed to write .gnostr/blobs/<hash>");
++++
++++
++++///
++++//        Command::new("sh")
++++//            .arg("-c")
++++//            .arg(format!("cd {} && git branch {}", self.opts.repo, hash))
++++//            .output()
++++//            .ok()
++++//            .expect("Failed to generate commit");
+++ 
+++         Ok(())
+++     }
diff --git a/src/gitminer.rs b/src/gitminer.rs
index d5f5f56..f330ca2 100644
--- a/src/gitminer.rs
+++ b/src/gitminer.rs
@@ -110,12 +110,12 @@ impl Gitminer {
             .ok()
             .expect("Failed to write .gnostr/blobs/<hash>");
         //add the blob
-        Command::new("sh")
-            .arg("-c")
-            .arg(format!("cd {} && git add .gnostr/blobs/{}", self.opts.repo, hash))
-            .output()
-            .ok()
-            .expect("Failed to git add .gnostr/blobs/<hash>");
+        //Command::new("sh")
+        //    .arg("-c")
+        //    .arg(format!("cd {} && git add .gnostr/blobs/{}", self.opts.repo, hash))
+        //    .output()
+        //    .ok()
+        //    .expect("Failed to git add .gnostr/blobs/<hash>");
 
         Ok(())
     }
