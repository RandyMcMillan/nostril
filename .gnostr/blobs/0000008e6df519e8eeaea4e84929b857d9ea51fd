commit 0000008e6df519e8eeaea4e84929b857d9ea51fd
Author: @RandyMcMillan <randy.lee.mcmillan@gmail.com>
Date:   Sun Jul 16 10:04:14 2023 -0400

    00:00017ae2:write commit/blob

diff --git a/src/gitminer.rs b/src/gitminer.rs
index 21752ac..d5f5f56 100644
--- a/src/gitminer.rs
+++ b/src/gitminer.rs
@@ -79,7 +79,12 @@ impl Gitminer {
             .expect("Failed to generate commit");
 
         /* repo.blob() generates a blob, not a commit.
-         * don't know if there's a way to do this with libgit2. */
+         * we write the commit, then
+         * we use the tmpfile to create .gnostr/blobs/<hash>
+         * we 'git show' the mined tmpfile
+         * and pipe it into the .gnostr/blobs/<hash>
+         */
+
         let tmpfile  = format!("/tmp/{}.tmp",hash);
         let mut file = File::create(&Path::new(&tmpfile))
             .ok()
@@ -89,6 +94,7 @@ impl Gitminer {
             .ok()
             .expect(&format!("Failed to write temporary file {}", &tmpfile));
 
+        //write the commit
         Command::new("sh")
             .arg("-c")
             .arg(format!("cd {} && git hash-object -t commit -w --stdin < {} && git reset --hard {}", self.opts.repo, tmpfile, hash))
@@ -96,21 +102,20 @@ impl Gitminer {
             .ok()
             .expect("Failed to generate commit");
 
+        //write the blob
         Command::new("sh")
             .arg("-c")
             .arg(format!("cd {} && touch -f .gnostr/blobs/{} && git show {} > .gnostr/blobs/{}", self.opts.repo, hash, hash, hash))
             .output()
             .ok()
             .expect("Failed to write .gnostr/blobs/<hash>");
-
-
-///
-//        Command::new("sh")
-//            .arg("-c")
-//            .arg(format!("cd {} && git branch {}", self.opts.repo, hash))
-//            .output()
-//            .ok()
-//            .expect("Failed to generate commit");
+        //add the blob
+        Command::new("sh")
+            .arg("-c")
+            .arg(format!("cd {} && git add .gnostr/blobs/{}", self.opts.repo, hash))
+            .output()
+            .ok()
+            .expect("Failed to git add .gnostr/blobs/<hash>");
 
         Ok(())
     }
