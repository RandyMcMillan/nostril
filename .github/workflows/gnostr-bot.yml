name: gnostr-bot

# Controls when the action will run.
on:
  schedule:
    - cron: '0 2 * * *' # run at 2 AM UTC
  pull_request:
    branches:
      - '*'
      - '*/*'
      - '**'
      - 'master'
      - 'main'
  push:
    branches:
      - '*'
      - '*/*'
      - '**'
      - 'master'
      - 'main'
    tags:
      - '**[0-9]+.[0-9]+.[0-9]+*'

  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    env:
      GNOSTR: "gnostr"
      FORCE: "--force"
      GIT_DISCOVERY_ACROSS_FILESYSTEM: 1
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: echo test
        #if: ${{ !env.ACT }}
        run: |
          echo GNOSTR=${{ env.GNOSTR }}
          echo GNOSTR1=${{ env.GNOSTR1 }}
        env:
          GNOSTR1: "GNOSTR1"
      - uses: styfle/cancel-workflow-action@0.11.0
        if: ${{ !env.ACT }}
        with:
          access_token: ${{ github.token }}

      - name: Restore rustup
        id: cache-rustup-restore
        uses: actions/cache/restore@v3
        if: ${{ !env.ACT }}
        with:
          path: |
            ~/.rustup
          key: ${{ runner.os }}-rustup

      - name: Restore cargo
        id: cache-cargo-restore
        uses: actions/cache/restore@v3
        if: ${{ !env.ACT }}
        with:
          path: |
            ~/.cargo
          key: ${{ runner.os }}-cargo

      - name: Restore target
        id: cache-target-restore
        uses: actions/cache/restore@v3
        if: ${{ !env.ACT }}
        with:
          path: |
            target
          key: ${{ runner.os }}-target

      - uses: actions/checkout@v3
        if: ${{ !env.ACT }}
        with:
          submodules: 'true'
          set-safe-directory: 'true'
          fetch-depth: '0'
          fetch-tags: false

      ## objective: streamline gnostr installation on macos/brewlinux
      - run: brew tap gnostr-org/homebrew-gnostr-org || true
        if: github.event_name == 'pull_request' && matrix.os == 'macos-latest'

      ## objective: streamline gnostr installation on macos/brewlinux
      - run: brew tap nostorg/nostr || true
        if: github.event_name == 'pull_request' && matrix.os == 'macos-latest'

      - run: rustup default stable
        if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && matrix.os == 'ubuntu-matrix'
      - run: cargo search gnostr --limit 100
        if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && matrix.os == 'ubuntu-matrix'
      - run: mkdir -p ~/bin
        if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && matrix.os == 'ubuntu-matrix'

      #- run: for t in */Cargo.toml;do echo $t;cargo b -r -vv --manifest-path $t ;done
      ## objective: ensure make detect installs all needed depends/libs/etc
      ## make detect is first for brew install sequence OR sudo make detect for apt install
      - run: make detect || sudo make detect
      - run: pipx install virtualenv || true

      ## objective: test non-cmake build gnostr-am
      - run: make gnostr gnostr-am gnostr-install
      - run: make gnostr-bins
      - run: gnostr-am --sec $(gnostr-sha256 $(gnostr-weeble)) --content $(gnostr-weeble)/$(gnostr-blockheight)/$(gnostr-wobble) -t gnostr --tag weeble $(gnostr-weeble) --tag blockheight $(gnostr-blockheight) --tag wobble $(gnostr-wobble)
      ## objective: test cmake build gnostr
      ## objective: test cargo build/install gnostr-bins
      - run: cmake .
      - run: V=1 make gnostr bins xq cargo-br cargo-i
      - run: V=1 make gnostr-install
      - run: V=1 make gnostr-verify-keypair
      - run: which gnostr
      - run: gnostr-nip --sec $(gnostr-sha256) | gnostr-post-event
        if: github.event_name == 'pull_request'
      - run: gnostr-nip --sec $(gnostr-sha256 $(gnostr-weeble)) | gnostr-post-event
        if: github.event_name == 'pull_request'
      - run: gnostr-nip --sec $(gnostr-sha256 $(gnostr-weeble)$(gnostr-blockheight)) | gnostr-post-event
        if: github.event_name == 'pull_request'

      - name: Save rustup
        id: cache-rustup-save
        uses: actions/cache/save@v3
        if: ${{ !env.ACT }}
        with:
          path: |
            ~/.rustup
          key: ${{ steps.cache-rustup-restore.outputs.cache-primary-key }}
      - name: Save cargo
        id: cache-cargo-save
        uses: actions/cache/save@v3
        if: ${{ !env.ACT }}
        with:
          path: |
            ~/.cargo
          key: ${{ steps.cache-cargo-restore.outputs.cache-primary-key }}
      - name: Save target
        id: cache-target-save
        uses: actions/cache/save@v3
        if: ${{ !env.ACT }}
        with:
          path: |
            target
          key: ${{ steps.cache-target-restore.outputs.cache-primary-key }}
